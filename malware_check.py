# 500 requests per day and a rate of 4 requests per minute.
# The Public API must not be used in commercial products or services.
# The Public API must not be used in business workflows that do not contribute new files.
# You are not allowed to register multiple accounts to overcome the aforementioned limitations.

# You must register to VirusTotal to get yourself a personal API Key (see: Google)
# Create a file and put the key in it and specify the path + name as a second parameter when invoking class MalwareChecker
# My example:
# File is ".api_key" and I just pasted it inside as a single line

import hashlib
import vt


class MalwareChecker:
    def __init__(self, exe_file: str, api_key: str):
        self.exe_file = exe_file
        self.api_key = api_key

    def make_md5(self):
        hash_md5 = hashlib.md5()
        with open(self.exe_file, 'rb') as f:
            for chunk in iter(lambda: f.read(4096), b""):
                hash_md5.update(chunk)
        return hash_md5.hexdigest()

    def scan(self):
        client = vt.Client(self.api_key)
        with open(self.exe_file, 'rb') as f:
            analysis = client.scan_file(f, wait_for_completion=True)
            client.close()
            
        scan_data = client.get_object("/files/{}", self.make_md5())
        client.close()
        data_suspicious = scan_data.last_analysis_stats['suspicious'] 
        data_malicious = scan_data.last_analysis_stats['malicious']
        data_undetected = scan_data.last_analysis_stats['undetected']
        print(f'Malicious: {data_malicious}, Suspicious: {data_suspicious}, Undetected: {data_undetected}')
        

        

        


if __name__ == "__main__":
    with open('.api_key', 'r') as f:
        api_key = f.read()
    test = MalwareChecker("example_files/JRuler.exe", api_key)
    test.scan()
    
    ## output
    ## [+] Positives/Total: 0.06%